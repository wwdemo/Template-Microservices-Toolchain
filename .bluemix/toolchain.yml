---
default_locale: en
locales: 
  $ref: locales.yml
name: "Microservices toolchain"
description: "With this cloud-native toolchain, you use a sample to create an online store that consists of two microservices: an Orders API, and a UI that calls both of the Orders API and the Catalog API that you deployed earlier. The toolchain is preconfigured for continuous delivery, source control, blue-green deployment, functional testing, issue tracking, online editing, and messaging.\n\nTo get started, click **Create**."
version: 0.2
image: data:image/png;base64,$file(toolchain.png,base64)
required:
 - deploy
 - github

# Github repos
orders-api-repo:
  service_id: githubpublic
  parameters:
    repo_name: "{{github.parameters.orders-api-repo_name}}"
    repo_url: "{{github.parameters.orders-api-repo_url}}"
    type: clone
    has_issues: false
  hidden: [form, description]

ui-repo:
  service_id: githubpublic
  parameters:
    repo_name: "{{github.parameters.ui-repo_name}}"
    repo_url: "{{github.parameters.ui-repo_url}}"
    type: clone
    has_issues: false
  hidden: [form, description]

# Pipelines
ui-build:
  service_id: pipeline
  parameters:
    name: "ui-{{name}}"
    ui-pipeline: true
    configuration:
      content: $file(ui.pipeline.yml)
      env:
        UI_REPO: "ui-repo"
        CF_APP_NAME: "{{deploy.parameters.ui-app-name}}"
        DEV_SPACE_NAME: "{{deploy.parameters.dev-space}}"
        DEV_ORG_NAME: "{{deploy.parameters.dev-organization}}"
        DEV_REGION_ID: "{{deploy.parameters.dev-region}}"
      execute: true
    services: ["ui-repo"]
  hidden: [form, description]

orders-api-build:
  service_id: pipeline
  parameters:
    name: "orders-api-{{name}}"
    configuration:
      content: $file(order-api.pipeline.yml)
      env:
        ORDER_API_REPO: "orders-api-repo"
        CF_APP_NAME: "{{deploy.parameters.orders-app-name}}"
        DEV_SPACE_NAME: "{{deploy.parameters.dev-space}}"
        DEV_ORG_NAME: "{{deploy.parameters.dev-organization}}"
        DEV_REGION_ID: "{{deploy.parameters.dev-region}}"
      execute: true
    services: ["orders-api-repo"]
  hidden: [form, description]
#Web IDE
webide:
  service_id: orion

#Deployment
deploy:
  schema:
    $ref: deploy.json
  service-category: pipeline
  parameters:
    dev-region: "{{region}}"
    dev-organization: "{{organization}}"
    dev-space: dev
    orders-app-name: "{{orders-api-repo.parameters.repo_name}}"
    ui-app-name: "{{ui-repo.parameters.repo_name}}"

#Github
github:
  schema:
    $ref: github.json
  service-category: githubpublic
  parameters:
    orders-api-repo_name: "orders-api-{{name}}"
    orders-api-repo_url: https://github.com/wwdemo/Template-Microservices-Orders.git
    ui-repo_name: "ui-{{name}}"
    ui-repo_url: https://github.com/wwdemo/Template-Microservices-UI.git
